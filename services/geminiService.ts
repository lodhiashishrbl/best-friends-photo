import { GoogleGenAI, Modality } from "@google/genai";
import { UploadedFile } from '../types';

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

export const mergeImages = async (image1: UploadedFile, image2: UploadedFile, backgroundPrompt: string): Promise<string> => {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image',
      contents: {
        parts: [
          {
            inlineData: {
              data: image1.base64,
              mimeType: image1.mimeType,
            },
          },
          {
            inlineData: {
              data: image2.base64,
              mimeType: image2.mimeType,
            },
          },
          {
            text: `Merge the two people from these two separate images into a single, cohesive photo. Make them stand together like best friends. Place them against a ${backgroundPrompt} as the background. Ensure the final image is photorealistic and blends seamlessly.`,
          },
        ],
      },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        return part.inlineData.data;
      }
    }

    throw new Error('No image was generated by the API.');
  } catch (error) {
    console.error('Error merging images with Gemini API:', error);
    throw new Error('Failed to merge images. Please try again.');
  }
};